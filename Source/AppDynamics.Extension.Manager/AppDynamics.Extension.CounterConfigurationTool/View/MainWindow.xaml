<Window x:Class="AppDynamics.Extension.CounterConfigurationTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:AppDynamics.Extension.CCT.Infrastructure.Extensions"
        xmlns:controls="clr-namespace:AppDynamics.Extension.CCT.View"
        Title="AppDynamics Extension for Performance Counter configuration" MinHeight="700" MinWidth="1120"
        >

    <Window.Resources>
        <ResourceDictionary Source="MainWindowResources.xaml" />
    </Window.Resources>

    <Grid UseLayoutRounding="True" ShowGridLines="False" Margin="0,0,-1,0" >
        <Grid.RowDefinitions>
            <RowDefinition x:Name="GridRowCounters1" Height="60" />
            <RowDefinition x:Name="GridRowCounters" Height="*" />
            <RowDefinition x:Name="GridRowFooter1" Height="50"/>
            <RowDefinition x:Name="GridRowFooter" Height="130" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="GridColCategory" Width="220" MinWidth="220"/>
            <ColumnDefinition x:Name="GridColCounters" Width="*" MinWidth="300"/>
            <ColumnDefinition x:Name="GridColConfig" Width="*" MinWidth="450" />
        </Grid.ColumnDefinitions>

        <Border Grid.ColumnSpan="2"
        Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"
        Style="{StaticResource MainBorderStyle}" >
        </Border>
        <Border Grid.ColumnSpan="1" Grid.RowSpan="3"
        Grid.Column="2" Grid.Row="0"
        Style="{StaticResource MainBorderStyle}" >
        </Border>
        <Border Grid.ColumnSpan="3" Grid.RowSpan="1"
        Grid.Column="0" Grid.Row="3" 
        Style="{StaticResource MainBorderStyle}" >
        </Border>

        <TextBlock Text="{Binding Path=UIDetails.HeadingConFigCounters, FallbackValue='HeadingConFigCounters'}" 
                   Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="1" VerticalAlignment="Top"
                   Style="{StaticResource TextBlockHeading}"/>

        <TextBlock Text="{Binding Path=UIDetails.HeadingPerfCounters, FallbackValue='HeadingPerfCounters'}" 
                   Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" 
                   Style="{StaticResource TextBlockHeading}"/>

        <TextBlock Text="{Binding Path=UIDetails.HeadingDescriptionCounter, FallbackValue='HeadingDescriptionCounter'}" 
                   Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" 
                   Style="{StaticResource TextBlockHeading}"/>

        <TextBlock Text="{Binding Path=UIDetails.HelptextDoubleClickToAdd, FallbackValue='HelptextDoubleClickToAdd'}" 
                   Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                   Style="{StaticResource TextBlockHelpText}"/>
        
        <TextBlock Text="{Binding Path=UIDetails.HelptextRemoveDuplicates, FallbackValue='* RemoveDuplicates'}" 
                   Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                   Style="{StaticResource TextBlockHelpText}"/>

        <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" 
                       Text="{Binding Path=CounterDetailWithXML}"
                       Style="{StaticResource TextBlockCounterDetailStyle}" ></TextBlock>
        
        <Button Command="{Binding Path=CopyToClip}" Grid.Row="2" Grid.Column="2"
               Style="{StaticResource ImageButtonClipBoard}">
            <Image Source="images/clip.png" />
        </Button>
        
        
        <CheckBox x:Name="CheckBoxShowInstances" Grid.Row="2" Grid.Column="0" Margin="10,0,0,0" 
			Grid.ColumnSpan="2" VerticalAlignment="Top" IsChecked="{Binding Path=ShowInstances, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
            Content="{Binding Path=UIDetails.CheckBoxText, FallbackValue='Show Instances (check to add specific instance)'}"
                  Style="{StaticResource CheckBoxText}" />

        <StackPanel  x:Name="stackHeader" Grid.Row="3" Grid.Column="2" >
            <Button Content="{Binding Path=UIDetails.ButtonReloadAllText, FallbackValue='Reload All'}" 
                    Command="{Binding Path=ReloadAll}"
                    Style="{StaticResource ButtonStyle}" />

            <Button Content="{Binding Path=UIDetails.ButtonSaveConfigText, FallbackValue='Save Configuration'}" 
                    Command="{Binding Path=SaveCounters}"
                    Style="{StaticResource ButtonStyle}"/>
        </StackPanel>

        <TextBox Grid.Row="0" Grid.Column="0" Style="{StaticResource FilterTextStyle}" 
			Text="{Binding Path=Filtertext, UpdateSourceTrigger=PropertyChanged}" 
                GotFocus="textCategoryFilter_GotFocus"  
			    LostFocus="textCategoryFilter_LostFocus"/>

        <TextBox Grid.Row="0" Grid.Column="2" Style="{StaticResource LabelTextStyle}" 
			Text="{Binding Path=ConfigFileLocation, FallbackValue='Loading Config File..'}" />

        <TextBox Text="{Binding Path=ListNoCountersText, Mode=OneWay}" Grid.Row="1" Grid.Column="2"
                   Style="{StaticResource TextBlockNoCounterText}" />

        <DataGrid x:Name="DataGridCategories" Grid.Row="1" Grid.Column="0" 
			Style="{StaticResource DataGridStyle}" 
                  ItemsSource="{ Binding Path=ListCategories, UpdateSourceTrigger=PropertyChanged}"
                  SelectedIndex="{Binding Path=SelectedCategoryIndex, UpdateSourceTrigger=PropertyChanged}">
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="Performance Category Name" Binding="{Binding CategoryName}" Width="*" >
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid Grid.Row="1" Grid.Column="1" Margin="0 5 10 2" 
			    Style="{StaticResource DataGridStyle}" 
                ItemsSource="{ Binding Path=ListCategoryCounters, UpdateSourceTrigger=PropertyChanged}"                  
                SelectedIndex="{Binding Path=SelectedCounterIndex, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding Path=SelectedCounter, UpdateSourceTrigger=PropertyChanged}"
                  local:RowDoubleClickHandler.MethodName="CounterConfigDoubleClick" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Performance Counter Name" Binding="{Binding CounterName}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Instance Name" Binding="{Binding InstanceName}" Width="*" 
                  Visibility="{Binding ElementName=CheckBoxShowInstances, Path=IsChecked, 
                    ConverterParameter={StaticResource booleanToVisibilityConverter }, UpdateSourceTrigger=PropertyChanged}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid Grid.Row="1" Grid.Column="2" Name="listConfigCounters"
                  Style="{StaticResource DataGridConfigCountersStyle}" 
                  ItemsSource="{Binding Path=ListConfigCounter, Mode=TwoWay}">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsAdded}" IsReadOnly="False" IsThreeState="False" ></DataGridCheckBoxColumn>
                <DataGridTextColumn Binding="{Binding}" Width="*" IsReadOnly="True" >
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <controls:CircularProgressBar Visibility="{Binding Path=ProgressBar.Visibility, FallbackValue=Hidden}"
                              Grid.Row="1" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2"
                              ></controls:CircularProgressBar>
        
        <controls:MessageDialog Visibility="{Binding Path=MessageBoxDialogue.Visibility, FallbackValue=Hidden}" 
                                Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" Grid.ColumnSpan="3"
                                ></controls:MessageDialog>

    
    </Grid>
</Window>

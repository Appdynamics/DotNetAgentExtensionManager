<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

    <Thickness x:Key="tbMargin" >5,15,15,15</Thickness>


    <!-- 
  This style configures both of the main content areas in the main window.
  -->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="{StaticResource Brush_HeaderBackground}" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="LightSlateGray" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="TextBlockHeading" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="10 5 0 5" />
        <Setter Property="FontSize"  Value="13" />
        <Setter Property="FontWeight"  Value="Bold" />
    </Style>


    <Style x:Key="TextBlockHelpText" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="10 5 0 10" />
        <Setter Property="FontSize"  Value="11" />
        <Setter Property="FontWeight"  Value="Normal" />
    </Style>


    <Style x:Key="CheckBoxText" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="10 2 0 5" />
        <Setter Property="FontSize"  Value="12" />
        <Setter Property="FontWeight"  Value="Normal" />
    </Style>
    
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Margin" Value="5,15,15,15"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Width" Value="200"></Setter>
    </Style>

    <Style x:Key="FilterTextStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10 5 0 1" />
        <Setter Property="FontSize"  Value="13" />
        <Setter Property="Width"  Value="200" />
        <Setter Property="Height"  Value="25" />
        <Setter Property="HorizontalAlignment"  Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Bottom" />
        <Setter Property="Foreground" Value="Gray"/>
    </Style>

    <Style x:Key="LabelTextStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10 5 0 1" />
        <Setter Property="FontSize"  Value="13" />
        <Setter Property="HorizontalAlignment"  Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Bottom" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TextWrapping" Value="Wrap" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBlockCounterDetailStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 30 270 10" />
        <Setter Property="FontSize"  Value="13" />
        <Setter Property="HorizontalAlignment"  Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Top" />
        <Setter Property="TextWrapping"  Value="Wrap" />
        <Setter Property="Height" Value="Auto"></Setter>
        <Setter Property="Width" Value="Auto" ></Setter>
    </Style>


    <Style x:Key="TextBlockNoCounterText" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10 5 5 10" />
        <Setter Property="FontSize"  Value="12" />
        <Setter Property="Foreground" Value="#911" />
        <Setter Property="HorizontalAlignment"  Value="Left" />
        <Setter Property="VerticalAlignment"  Value="Top" />
        <Setter Property="TextWrapping"  Value="Wrap" />
        <Setter Property="IsReadOnly"  Value="True" />
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderThickness" Value="0"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="AlternatingRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#FFF"></Setter>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#EEE"></Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="True" >
                <Setter Property="Background" Value="#BBB" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="#000" />
        </Style.Resources>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="HeadersVisibility" Value="Column"></Setter>
        <Setter Property="SelectionMode" Value="Single"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="GridLinesVisibility" Value="Horizontal"></Setter>
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>
        <Setter Property="Margin" Value="10 5 10 2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="LightSlateGray" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource AlternatingRowStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
    </Style>

    <Style x:Key="DataGridConfigCountersStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="SelectionMode" Value="Single"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="IsReadOnly" Value="False"></Setter>
        <Setter Property="Margin" Value="10 5 10 2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AutoGenerateColumns" Value="False"/> 
        <Setter Property="HeadersVisibility" Value="None"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource AlternatingRowStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
    </Style>

    <Style x:Key="ImageButtonClipBoard" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Top" ></Setter>
        <Setter Property="HorizontalAlignment" Value="Right" ></Setter>
        <Setter Property="Width" Value="20" ></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="Margin" Value="5 5 15 5" />
        <Setter Property="ToolTip" Value="Copy XML to ClipBoard" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                            <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonStyleMessageBox" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Width" Value="80"></Setter>
    </Style>

    <Style x:Key="TextBlockHeadingMessageBox" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="55 25 15 5" />
        <Setter Property="FontWeight"  Value="Bold" />
        <Setter Property="TextWrapping"  Value="Wrap" />
    </Style>

    <Style x:Key="ImageHeadingMessageBox" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Top" ></Setter>
        <Setter Property="HorizontalAlignment" Value="Left" ></Setter>
        <Setter Property="Width" Value="32" ></Setter>
        <Setter Property="Height" Value="32"></Setter>
        <Setter Property="Margin" Value="15 15 0 5" />
    </Style>

    <Style x:Key="TextBlockMessageBox" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="10 5 0 5" />
        <Setter Property="TextWrapping"  Value="Wrap" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
    </Style>


    <Style x:Key="BorderStyleMessageBox" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="BorderBrush" Value="#B11" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>


</ResourceDictionary>